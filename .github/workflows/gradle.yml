name: MSA Build & Deploy
#시작

on:
  push:
    branches: [ "user" ]

env:
  REGION: ap-northeast-2
  ECR_REGISTRY: 061039771220.dkr.ecr.ap-northeast-2.amazonaws.com
  SERVICE_DIRS: config-service,discovery-service,gateway-service,user-service,postservice,order-service,course-service
  TAG: 1.0.${{ github.run_number }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Images (with latest tag)
        run: |
          for service in $(echo "${{ env.SERVICE_DIRS }}" | tr ',' '\n'); do
            echo "Building and pushing $service"
            cd $service
            chmod +x ./gradlew
            ./gradlew clean build -x test
            docker build -t $ECR_REGISTRY/$service:${{ env.TAG }} -t $ECR_REGISTRY/$service:latest .
            docker push $ECR_REGISTRY/$service:${{ env.TAG }}
            docker push $ECR_REGISTRY/$service:latest
            cd ..
          done

      - name: Send docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "./docker-compose.yml"
          target: "/home/ubuntu"

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu

            # 도커 권한 확인 (sudo 필요 시)
            if ! docker ps > /dev/null 2>&1; then
              echo "Docker requires sudo. Switching..."
              alias docker='sudo docker'
              alias docker-compose='sudo docker-compose'
            fi

            # docker-compose 설치 (필요 시)
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing docker-compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # ECR 로그인
            aws ecr get-login-password --region ${{ env.REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

            # 기존 컨테이너 중지 및 제거
            docker-compose down

            # 최신 이미지 pull
            docker-compose pull

            # 서비스 재시작
            docker-compose up -d
